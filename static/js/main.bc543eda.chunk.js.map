{"version":3,"sources":["ContactList/ContactsList.js","Filter/Filter.js","Forms/InputForm.js","App.js","index.js"],"names":["ContactsList","contacts","onClick","className","map","contact","name","number","id","type","Filter","value","onChange","InputForm","onSubmit","useState","setName","setNumber","handleChange","event","target","resetForm","preventDefault","pattern","title","required","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","some","alert","uuidv4","prevState","currentTarget","normalizedFilter","toLowerCase","includes","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc543eda.chunk.js","sourcesContent":["import React from 'react';\nimport './ContactList.css';\n\nfunction ContactsList({ contacts, onClick }) {\n  return (\n    <ul className=\"contactsList\">\n      {contacts.map(contact => (\n        <li key={contact.id} className=\"item\">\n          <span className=\"itemText\">\n            <span className=\"itemName\">{contact.name}:</span>\n            <span className=\"itemNum\">{contact.number}</span>\n          </span>\n\n          <button\n            id={contact.id}\n            type=\"button\"\n            onClick={onClick}\n            className=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","import React from 'react';\nimport './Filter.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className=\"filter\">\n    <label>\n      <span className=\"filterText\">Filter</span>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  </div>\n);\n\nexport default Filter;\n","import { useState } from 'react';\n\nexport default function InputForm({onSubmit}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const {name, value} = event.target;\n    \n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(name, number); \n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber(''); \n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label>\n        <h2>Name</h2>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <h2>Number</h2>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className=\"button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactsList from './ContactList/ContactsList';\nimport Filter from './Filter/Filter';\nimport InputForm from './Forms/InputForm';\n\nexport default function App() {\n  const [contacts, setContacts] = useState( JSON.parse(window.localStorage.getItem('Contacts')) ??\n    [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = (name, number) => {\n    \n    if (contacts.some(contact => contact.name === name)) {\n      alert(`${name} already exist in contact list`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    setContacts(prevState => [contact, ...prevState]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const handleDeleteContact = event => {\n    setContacts(\n      contacts.filter(contact => contact.id !== event.currentTarget.id),\n    );\n  };\n\n  useEffect(() => {\n    localStorage.setItem('Contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"formsContainer\">\n        <InputForm onSubmit={formSubmitHandler} />\n      </div>\n\n      <div className=\"contactsContainer\">\n        <div className=\"contacts\">\n          <h2>Contacts</h2>\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactsList\n            contacts={getVisibleContacts()}\n            onClick={handleDeleteContact}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}