{"version":3,"sources":["ContactList/ContactsList.js","Filter/Filter.js","Forms/Form.js","App.js","index.js"],"names":["ContactsList","contacts","onClick","className","map","contact","name","number","id","type","Filter","value","onChange","Form","state","handleChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","pattern","title","required","Component","App","filter","formSubmitHandler","data","some","alert","uuidv4","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","handleDeleteContact","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e4f81b1.chunk.js","sourcesContent":["import React from 'react';\nimport './ContactList.css';\n\nfunction ContactsList({ contacts, onClick }) {\n  return (\n    <ul className=\"contactsList\">\n      {contacts.map(contact => (\n        <li key={contact.id} className=\"item\">\n          <span className=\"itemText\">\n            <span className=\"itemName\">{contact.name}:</span>\n            <span className=\"itemNum\">{contact.number}</span>\n          </span>\n\n          <button\n            id={contact.id}\n            type=\"button\"\n            onClick={onClick}\n            className=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","import React from 'react';\nimport './Filter.css';\n\nconst Filter = ({ value, onChange }) => (\n  <div className=\"filter\">\n    <label>\n      <span className=\"filterText\">Filter</span>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  </div>\n);\n\nexport default Filter;\n","import React, { Component } from 'react';\n//import { v4 as uuidv4 } from 'uuid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <label>\n          <h2>Name</h2>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <h2>Number</h2>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className=\"button\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport ContactsList from './ContactList/ContactsList';\nimport Filter from './Filter/Filter';\nimport Form from './Forms/Form';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    if (this.state.contacts.some(contact => contact.name === data.name)) {\n      alert(`${data.name} already exist in contact list`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  handleDeleteContact = event => {\n    this.setState({\n      contacts: this.state.contacts.filter(\n        contact => contact.id !== event.currentTarget.id,\n      ),\n    });\n  };\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('Contacts');\n    const parsedContacts = JSON.parse(contacts);\n    console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновился список контактов');\n\n      localStorage.setItem('Contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const filteredContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"container\">\n        <div className=\"formsContainer\">\n          <Form onSubmit={this.formSubmitHandler} />\n        </div>\n\n        <div className=\"contactsContainer\">\n          <div className=\"contacts\">\n            <h2>Contacts</h2>\n            <Filter value={this.state.filter} onChange={this.changeFilter} />\n            <ContactsList\n              contacts={filteredContacts}\n              onClick={this.handleDeleteContact}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}